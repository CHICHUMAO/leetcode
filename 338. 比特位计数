给你一个整数 n ，对于 0 <= i <= n 中的每个 i ，计算其二进制表示中 1 的个数 ，返回一个长度为 n + 1 的数组 ans 作为答案。

 

示例 1：

输入：n = 2
输出：[0,1,1]
解释：
0 --> 0
1 --> 1
2 --> 10
示例 2：

输入：n = 5
输出：[0,1,1,2,1,2]
解释：
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* countBits(int num, int* returnSize){
    int * result = (int *)malloc(sizeof(int) * (num + 1));
    * returnSize = num + 1;
    result[0] = 0;
    for(int i = 1; i <= num; i++){
        result[i] = result[i >> 1] + (i & 1);//位操作，实际上是分了奇偶来计算，比直接头铁算好多了
    }
    return result;
}

